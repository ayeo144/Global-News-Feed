name: Deploy to ECR

on: push

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: eu-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: global-news-feed
        IMAGE_TAG: etl_image
      run: |
        cd etl
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
        --build-arg NEWS_API_KEY=${{secrets.NEWS_API_KEY}} \
        --build-arg AWS_ACCESS_KEY=${{secrets.AWS_ACCESS_KEY}} \
        --build-arg AWS_SECRET_KEY=${{secrets.AWS_SECRET_KEY}} \
        --build-arg S3_BUCKET_NAME=${{secrets.S3_BUCKET_NAME}} \
        --build-arg AWS_DB_INSTANCE_ID=${{secrets.AWS_DB_INSTANCE}} \
        --build-arg AWS_DB_USERNAME=${{secrets.AWS_DB_USERNAME}} \
        --build-arg AWS_DB_PASSWORD=${{secrets.AWS_DB_PASSWORD}} \
        --build-arg AWS_DB_HOST=${{secrets.AWS_DB_HOST}} \
        --build-arg AWS_DB_PORT=${{secrets.AWS_DB_PORT}} \
        --build-arg AWS_DB_NAME=${{secrets.AWS_DB_NAME}} .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG